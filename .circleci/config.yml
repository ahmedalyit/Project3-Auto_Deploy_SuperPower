version: 2.1

jobs:
  build-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Build front-end
          command: |
            cd frontend
            sudo npm install webpack-dev-server -g
            sudo npm install
            sudo npm run build
            exit 1
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-build 
  test-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: ["frontend-build"]  # -<< pipeline.id >>"
      - run:
          name: Font-end test
          command: |
            cd frontend
            npm install oauth-sign
            npm run test
  scan-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: ["frontend-build"]  # -<< pipeline.id >>"
      - run:
          name: Font-end security scan
          command: |
            cd frontend
            npm install oauth-sign
            npm audit --audit-level=critical
  build-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: Back-end build
          command: |
            cd backend
            npm install
            npm run build
             exit 1
      - save_cache:
          paths: [backend/node_modules]
          key: backend-build
  test-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: ["frontend-build"]  # -<< pipeline.id >>"
      - run:
          name: Back-end test
          command: |
            cd backend
            npm install oauth-sign
            npm run test
workflows:
  default:
    jobs:
      - build-frontend
      - build-backend
      - test-frontend:
          requires: [build-frontend]
      - test-backend:
          requires: [build-backend]
      - scan-frontend:
          requires: [build-frontend]
